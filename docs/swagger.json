{
    "swagger": "2.0",
    "info": {
        "description": "description",
        "title": "meteor",
        "contact": {},
        "version": "0.1"
    },
    "host": "meteor-api2.onrender.com",
    "paths": {
        "/api/v1/get-service-cost": {
            "post": {
                "description": "рассчитать стоимость доставки по параметрам посылок",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Marketplace"
                ],
                "summary": "рассчитать стоимость доставки по параметрам посылок",
                "parameters": [
                    {
                        "description": "данные заказа",
                        "name": "ServiceData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RequestGetServiceCost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseGetServiceCost"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Проверка работоспособности",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "проверка работоспособности",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {}
            }
        },
        "models.Delivery": {
            "description": "Куда",
            "type": "object",
            "properties": {
                "cityId": {
                    "type": "string",
                    "example": "49265227"
                },
                "cityName": {
                    "type": "string",
                    "example": "Челябинск"
                },
                "countryCode": {
                    "type": "string",
                    "example": "RU"
                },
                "index": {
                    "type": "string",
                    "example": "140012"
                },
                "regionCode": {
                    "type": "string",
                    "example": "74"
                }
            }
        },
        "models.Parcel": {
            "description": "Посылка",
            "type": "object",
            "properties": {
                "height": {
                    "type": "integer",
                    "example": 20
                },
                "length": {
                    "type": "integer",
                    "example": 20
                },
                "quantity": {
                    "type": "integer",
                    "example": 1
                },
                "weight": {
                    "type": "integer",
                    "example": 5
                },
                "width": {
                    "type": "integer",
                    "example": 20
                }
            }
        },
        "models.Pickup": {
            "description": "Откуда",
            "type": "object",
            "properties": {
                "cityId": {
                    "type": "string",
                    "example": "49694102"
                },
                "cityName": {
                    "type": "string",
                    "example": "Москва"
                },
                "countryCode": {
                    "type": "string",
                    "example": "RU"
                },
                "index": {
                    "type": "string",
                    "example": "140012"
                },
                "regionCode": {
                    "type": "string",
                    "example": "77"
                }
            }
        },
        "models.RequestGetServiceCost": {
            "type": "object",
            "properties": {
                "delivery": {
                    "$ref": "#/definitions/models.Delivery"
                },
                "parcel": {
                    "$ref": "#/definitions/models.Parcel"
                },
                "pickup": {
                    "$ref": "#/definitions/models.Pickup"
                },
                "selfDelivery": {
                    "description": "самовывоз получателя",
                    "type": "boolean",
                    "example": true
                },
                "selfPickup": {
                    "description": "самовывоз отправителя",
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "models.ResponseGetServiceCost": {
            "type": "object",
            "properties": {
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Service"
                    }
                }
            }
        },
        "models.Service": {
            "type": "object",
            "properties": {
                "cost": {
                    "type": "string"
                },
                "days": {
                    "type": "string"
                },
                "serviceCode": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                }
            }
        }
    }
}